version: '3.8'

services:
  # Postgres Database Service
  postgres:
    image: postgres:15.2-alpine3.17
    container_name: realtime-postgres
    restart: always
    environment:
      - POSTGRES_USER=realtime
      - POSTGRES_PASSWORD=realtime
      - POSTGRES_DB=realtime
      - SCHEMA=realtime
    ports:
      - "15432:5432"
    volumes:
      - db_data_realtime:/var/lib/postgresql/data

  # Zookeeper Service
  zookeeper:
    image: bitnami/zookeeper:latest
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"
    volumes:
      - zookeeper_data:/bitnami/zookeeper

  # Kafka Service
  kafka:
    image: bitnami/kafka:latest
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    volumes:
      - kafka_data:/bitnami/kafka

  # Kafka UI Service
  kafka_ui:
    image: provectuslabs/kafka-ui
    hostname: kafka_ui
    container_name: kafka_ui
    restart: always
    ports:
      - '7000:8080'
    environment:
      KAFKA_CLUSTERS_0_NAME: kafka
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_BROKERCONNECT: kafka:29092
    depends_on:
      - kafka
      - zookeeper

volumes:
  db_data_realtime:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
